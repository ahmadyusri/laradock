apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: docker-in-docker
      name: docker-in-docker
    spec:
      ports:
        - name: "2375"
          port: 2375
          targetPort: 2375
      selector:
        io.kompose.service: docker-in-docker
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
        - name: "443"
          port: 443
          targetPort: 443
        - name: "81"
          port: 81
          targetPort: 81
      selector:
        io.kompose.service: nginx
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: php-fpm
      name: php-fpm
    spec:
      ports:
        - name: "9003"
          port: 9003
          targetPort: 9003
        - name: "9000"
          port: 9000
          targetPort: 9000
      selector:
        io.kompose.service: php-fpm
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: redis
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: redis-webui
      name: redis-webui
    spec:
      ports:
        - name: "9987"
          port: 9987
          targetPort: 80
      selector:
        io.kompose.service: redis-webui
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: workspace
      name: workspace
    spec:
      ports:
        - name: "2222"
          port: 2222
          targetPort: 22
        - name: "3000"
          port: 3000
          targetPort: 3000
        - name: "3001"
          port: 3001
          targetPort: 3001
        - name: "8080"
          port: 8080
          targetPort: 8080
        - name: "8001"
          port: 8001
          targetPort: 8000
        - name: "4200"
          port: 4200
          targetPort: 4200
      selector:
        io.kompose.service: workspace
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: docker-in-docker
      name: docker-in-docker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: docker-in-docker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: docker-in-docker
        spec:
          containers:
            - env:
                - name: DOCKER_TLS_SAN
                  value: DNS:docker-in-docker
              image: docker:19.03-dind
              name: docker-in-docker
              ports:
                - containerPort: 2375
              resources: {}
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /var/www
                  name: docker-in-docker-hostpath0
                - mountPath: /certs/client
                  name: docker-in-docker
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia
              name: docker-in-docker-hostpath0
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock
              name: docker-in-docker
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: backend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/backend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/backend: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: laravel-horizon
      name: laravel-horizon
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: laravel-horizon
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: laravel-horizon
        spec:
          containers:
            - image: ahmadyusri/klik_adzkia_laravel-horizon
              name: laravel-horizon
              resources: {}
              volumeMounts:
                - mountPath: /var/www
                  name: laravel-horizon-hostpath0
                - mountPath: /etc/supervisord.d
                  name: laravel-horizon-hostpath1
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia
              name: laravel-horizon-hostpath0
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/laravel-horizon/supervisord.d
              name: laravel-horizon-hostpath1
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nginx
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: nginx
        spec:
          containers:
            - image: nginx
              name: nginx
              ports:
                - containerPort: 80
                - containerPort: 443
                - containerPort: 81
              resources: {}
              volumeMounts:
                - mountPath: /var/www
                  name: nginx-hostpath0
                - mountPath: /var/log/nginx
                  name: nginx-hostpath1
                - mountPath: /etc/nginx/sites-available
                  name: nginx-hostpath2
                - mountPath: /etc/nginx/ssl
                  name: nginx-hostpath3
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia
              name: nginx-hostpath0
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/logs/nginx
              name: nginx-hostpath1
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/nginx/sites
              name: nginx-hostpath2
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/nginx/ssl
              name: nginx-hostpath3
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: frontend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/frontend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/frontend: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: php-fpm
      name: php-fpm
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: php-fpm
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: php-fpm
        spec:
          containers:
            - env:
                - name: DOCKER_CERT_PATH
                  value: /certs/client
                - name: DOCKER_HOST
                  value: tcp://docker-in-docker:2376
                - name: DOCKER_TLS_CERTDIR
                  value: /certs
                - name: DOCKER_TLS_VERIFY
                  value: "1"
                - name: FAKETIME
                  value: "-0"
                - name: PHP_IDE_CONFIG
                  value: serverName=laradock
              image: ahmadyusri/klik_adzkia_php-fpm
              name: php-fpm
              ports:
                - containerPort: 9003
                - containerPort: 9000
              resources: {}
              volumeMounts:
                - mountPath: /usr/local/etc/php/php.ini
                  name: php-fpm-hostpath0
                - mountPath: /var/www
                  name: php-fpm-hostpath1
                - mountPath: /certs/client
                  name: docker-in-docker
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/php-fpm/php8.0.ini
              name: php-fpm-hostpath0
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia
              name: php-fpm-hostpath1
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock
              name: docker-in-docker
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: redis
        spec:
          containers:
            - image: redis
              name: redis
              ports:
                - containerPort: 6379
              resources: {}
              volumeMounts:
                - mountPath: /data
                  name: redis-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Users/AhmadYusri/.klik_adzkia_docker/data/redis
              name: redis-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: redis-webui
      name: redis-webui
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis-webui
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: redis-webui
        spec:
          containers:
            - env:
                - name: ADMIN_PASS
                  value: =3jD^^>3hU!%Fb6"
                - name: ADMIN_USER
                  value: klikadzkiaredis
                - name: REDIS_1_HOST
                  value: redis
                - name: REDIS_1_PORT
                  value: "6379"
              image: ahmadyusri/klik_adzkia_redis-webui
              name: redis-webui
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: workspace
      name: workspace
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: workspace
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.production.yml -o kubernetes-output.yaml --volumes hostPath
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: workspace
        spec:
          containers:
            - env:
                - name: DOCKER_CERT_PATH
                  value: /certs/client
                - name: DOCKER_HOST
                  value: tcp://docker-in-docker:2376
                - name: DOCKER_TLS_CERTDIR
                  value: /certs
                - name: DOCKER_TLS_VERIFY
                  value: "1"
                - name: PHP_IDE_CONFIG
                  value: serverName=laradock
              image: ahmadyusri/klik-adzkia
              name: workspace
              ports:
                - containerPort: 22
                - containerPort: 3000
                - containerPort: 3001
                - containerPort: 8080
                - containerPort: 8000
                - containerPort: 4200
              resources: {}
              tty: true
              volumeMounts:
                - mountPath: /var/www/storage/app
                  name: workspace-hostpath0
                - mountPath: /var/www/storage/logs
                  name: workspace-hostpath1
                - mountPath: /var/www/storage/debugbar
                  name: workspace-hostpath2
                - mountPath: /var/www/public_html/assets/resources
                  name: workspace-hostpath3
                - mountPath: /var/www
                  name: workspace-hostpath4
                - mountPath: /certs/client
                  name: docker-in-docker
                - mountPath: /etc/supervisord.d
                  name: workspace-hostpath6
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /Users/AhmadYusri/.klik_adzkia_docker/data/workspace/storage/app
              name: workspace-hostpath0
            - hostPath:
                path: /Users/AhmadYusri/.klik_adzkia_docker/data/workspace/storage/logs
              name: workspace-hostpath1
            - hostPath:
                path: /Users/AhmadYusri/.klik_adzkia_docker/data/workspace/storage/debugbar
              name: workspace-hostpath2
            - hostPath:
                path: /Users/AhmadYusri/.klik_adzkia_docker/data/workspace/public_assets_resources
              name: workspace-hostpath3
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia
              name: workspace-hostpath4
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock
              name: docker-in-docker
            - hostPath:
                path: /Applications/XAMPP/xamppfiles/htdocs/klik-adzkia/laradock/php-worker/supervisord.d
              name: workspace-hostpath6
    status: {}
kind: List
metadata: {}

